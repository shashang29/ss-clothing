{"ast":null,"code":"var _jsxFileName = \"/Users/shashang/Projects/ss-clothing/client/src/components/with-spinner/with-spinner.component.jsx\";\nimport React, { useContext } from 'react';\nimport CollectionsContext from '../../contexts/collections/collections.context';\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => () => {\n  const {\n    isLoading\n  } = useContext(CollectionsContext);\n  return isLoading ? /*#__PURE__*/React.createElement(SpinnerOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/Users/shashang/Projects/ss-clothing/client/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","useContext","CollectionsContext","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,kBAAP,MAA+B,gDAA/B;AAGA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI,MAAM;AAE9C,QAAM;AAACC,IAAAA;AAAD,MAAaN,UAAU,CAACC,kBAAD,CAA7B;AAEI,SAAOK,SAAS,gBAAI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,CAAJ,gBAIZ,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ;AAMH,CAVD;;AAYA,eAAeH,WAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport CollectionsContext from '../../contexts/collections/collections.context';\n\n\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => () => {\n\nconst {isLoading} =useContext(CollectionsContext)\n\n    return isLoading ? (<SpinnerOverlay>\n        <SpinnerContainer />\n    </SpinnerOverlay> )\n    : (\n        <WrappedComponent {...otherProps}/>\n    );\n};\n\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}