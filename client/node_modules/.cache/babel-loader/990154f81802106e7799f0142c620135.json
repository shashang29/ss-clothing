{"ast":null,"code":"var _jsxFileName = \"/Users/shashang/Projects/ss-clothing/client/src/providers/cart/cart.provider.jsx\";\nimport React, { createContext, useState, useEffect, useReducer } from 'react';\nimport { addItemToCart, removeItemFromCart, filterItemFromCart, getCartItemsCount, getCartTotal } from './cart.utils';\n\nlet reducer = (cartItems, newcartItems) => {\n  if (cartItems === null) {\n    sessionStorage.removeItem(\"cartItems\");\n    return [];\n  }\n\n  return [...cartItems, ...newcartItems];\n};\n\nconst localState = JSON.parse(sessionStorage.getItem('cartItems'));\nexport const CartContext = createContext({\n  hidden: true,\n  toggleHidden: () => {},\n  cartItems: [],\n  addItem: () => {},\n  removeItem: () => {},\n  clearItemFromCart: () => {},\n  clearCart: () => {},\n  cartItemsCount: 0,\n  cartTotal: 0\n});\n\nconst CartProvider = ({\n  children\n}) => {\n  const [cartItems, setCartItems] = useReducer(reducer, localState || []);\n  console.log(cartItems);\n  useEffect(() => {\n    sessionStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }, [cartItems]);\n  const [hidden, setHidden] = useState(true); // const [cartItems, setCartItems] = useState([]);\n\n  const [cartItemsCount, setCartItemsCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\n\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\n\n  const toggleHidden = () => setHidden(!hidden);\n\n  const clearItemFromCart = item => setCartItems(filterItemFromCart(cartItems, item));\n\n  const clearCart = () => setCartItems([]);\n\n  useEffect(() => {\n    setCartItemsCount(getCartItemsCount(cartItems));\n    setCartTotal(getCartTotal(cartItems));\n  }, [cartItems]);\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      hidden,\n      toggleHidden,\n      cartItems,\n      addItem,\n      removeItem,\n      clearItemFromCart,\n      clearCart,\n      cartItemsCount,\n      cartTotal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["/Users/shashang/Projects/ss-clothing/client/src/providers/cart/cart.provider.jsx"],"names":["React","createContext","useState","useEffect","useReducer","addItemToCart","removeItemFromCart","filterItemFromCart","getCartItemsCount","getCartTotal","reducer","cartItems","newcartItems","sessionStorage","removeItem","localState","JSON","parse","getItem","CartContext","hidden","toggleHidden","addItem","clearItemFromCart","clearCart","cartItemsCount","cartTotal","CartProvider","children","setCartItems","console","log","setItem","stringify","setHidden","setCartItemsCount","setCartTotal","item"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect, useReducer } from 'react';\n\nimport {\n  addItemToCart,\n  removeItemFromCart,\n  filterItemFromCart,\n  getCartItemsCount,\n  getCartTotal\n} from './cart.utils';\n\nlet reducer = (cartItems, newcartItems) => {\n  if (cartItems === null) {\n    sessionStorage.removeItem(\"cartItems\");\n    return [];\n  }\n  return [...cartItems, ...newcartItems];\n};\n\nconst localState = JSON.parse(sessionStorage.getItem('cartItems'));\n\nexport const CartContext = createContext({\n  hidden: true,\n  toggleHidden: () => { },\n  cartItems: [],\n  addItem: () => { },\n  removeItem: () => { },\n  clearItemFromCart: () => { },\n  clearCart: () => { },\n  cartItemsCount: 0,\n  cartTotal: 0\n});\n\nconst CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useReducer(reducer, localState || []);\n  console.log(cartItems);\n  useEffect(() => {\n    sessionStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const [hidden, setHidden] = useState(true);\n  // const [cartItems, setCartItems] = useState([]);\n  const [cartItemsCount, setCartItemsCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\n  const toggleHidden = () => setHidden(!hidden);\n  const clearItemFromCart = item =>\n    setCartItems(filterItemFromCart(cartItems, item));\n  const clearCart = () => setCartItems([])\n\n  useEffect(() => {\n    setCartItemsCount(getCartItemsCount(cartItems));\n    setCartTotal(getCartTotal(cartItems));\n  }, [cartItems]);\n\n  return (\n    <CartContext.Provider\n      value={{\n        hidden,\n        toggleHidden,\n        cartItems,\n        addItem,\n        removeItem,\n        clearItemFromCart,\n        clearCart,\n        cartItemsCount,\n        cartTotal\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}