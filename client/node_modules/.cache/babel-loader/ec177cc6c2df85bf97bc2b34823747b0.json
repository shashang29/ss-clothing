{"ast":null,"code":"var _jsxFileName = \"/Users/shashang/Projects/ss-clothing/client/src/providers/cart/cart.provider.jsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { addItemToCart, removeItemFromCart, filterItemFromCart, getCartItemsCount, getCartTotal } from './cart.utils';\nconst storedState = JSON.parse(sessionStorage.getItem('cartItems'));\nexport const CartContext = createContext({\n  hidden: true,\n  toggleHidden: () => {},\n  cartItems: [],\n  addItem: () => {},\n  removeItem: () => {},\n  clearItemFromCart: () => {},\n  clearCart: () => {},\n  cartItemsCount: 0,\n  cartTotal: 0\n});\n\nconst CartProvider = ({\n  children\n}) => {\n  const [hidden, setHidden] = useState(true);\n  const [cartItems, setCartItems] = useState(storedState ? storedState : []);\n  const [cartItemsCount, setCartItemsCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\n\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\n\n  const toggleHidden = () => setHidden(!hidden);\n\n  const clearItemFromCart = item => setCartItems(filterItemFromCart(cartItems, item));\n\n  const clearCart = () => setCartItems([]);\n\n  useEffect(() => {\n    setCartItemsCount(getCartItemsCount(cartItems));\n    sessionStorage.setItem('cartItems', JSON.stringify(cartItems));\n    setCartTotal(getCartTotal(cartItems));\n  }, [cartItems]);\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      hidden,\n      toggleHidden,\n      cartItems,\n      addItem,\n      removeItem,\n      clearItemFromCart,\n      clearCart,\n      cartItemsCount,\n      cartTotal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["/Users/shashang/Projects/ss-clothing/client/src/providers/cart/cart.provider.jsx"],"names":["React","createContext","useState","useEffect","addItemToCart","removeItemFromCart","filterItemFromCart","getCartItemsCount","getCartTotal","storedState","JSON","parse","sessionStorage","getItem","CartContext","hidden","toggleHidden","cartItems","addItem","removeItem","clearItemFromCart","clearCart","cartItemsCount","cartTotal","CartProvider","children","setHidden","setCartItems","setCartItemsCount","setCartTotal","item","setItem","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,SACEC,aADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,iBAJF,EAKEC,YALF,QAMO,cANP;AAQA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,CAApB;AAEA,OAAO,MAAMC,WAAW,GAAGb,aAAa,CAAC;AACvCc,EAAAA,MAAM,EAAE,IAD+B;AAEvCC,EAAAA,YAAY,EAAE,MAAM,CAAG,CAFgB;AAGvCC,EAAAA,SAAS,EAAE,EAH4B;AAIvCC,EAAAA,OAAO,EAAE,MAAM,CAAG,CAJqB;AAKvCC,EAAAA,UAAU,EAAE,MAAM,CAAG,CALkB;AAMvCC,EAAAA,iBAAiB,EAAE,MAAM,CAAG,CANW;AAOvCC,EAAAA,SAAS,EAAE,MAAM,CAAG,CAPmB;AAQvCC,EAAAA,cAAc,EAAE,CARuB;AASvCC,EAAAA,SAAS,EAAE;AAT4B,CAAD,CAAjC;;AAYP,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACV,MAAD,EAASW,SAAT,IAAsBxB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACe,SAAD,EAAYU,YAAZ,IAA4BzB,QAAQ,CAACO,WAAW,GAAGA,WAAH,GAAiB,EAA7B,CAA1C;AACA,QAAM,CAACa,cAAD,EAAiBM,iBAAjB,IAAsC1B,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACqB,SAAD,EAAYM,YAAZ,IAA4B3B,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMgB,OAAO,GAAGY,IAAI,IAAIH,YAAY,CAACvB,aAAa,CAACa,SAAD,EAAYa,IAAZ,CAAd,CAApC;;AACA,QAAMX,UAAU,GAAGW,IAAI,IAAIH,YAAY,CAACtB,kBAAkB,CAACY,SAAD,EAAYa,IAAZ,CAAnB,CAAvC;;AACA,QAAMd,YAAY,GAAG,MAAMU,SAAS,CAAC,CAACX,MAAF,CAApC;;AACA,QAAMK,iBAAiB,GAAGU,IAAI,IAC5BH,YAAY,CAACrB,kBAAkB,CAACW,SAAD,EAAYa,IAAZ,CAAnB,CADd;;AAEA,QAAMT,SAAS,GAAG,MAAMM,YAAY,CAAC,EAAD,CAApC;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,iBAAiB,CAACrB,iBAAiB,CAACU,SAAD,CAAlB,CAAjB;AACAL,IAAAA,cAAc,CAACmB,OAAf,CAAuB,WAAvB,EAAoCrB,IAAI,CAACsB,SAAL,CAAef,SAAf,CAApC;AACAY,IAAAA,YAAY,CAACrB,YAAY,CAACS,SAAD,CAAb,CAAZ;AACD,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAMA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,MADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA,SAHK;AAILC,MAAAA,OAJK;AAKLC,MAAAA,UALK;AAMLC,MAAAA,iBANK;AAOLC,MAAAA,SAPK;AAQLC,MAAAA,cARK;AASLC,MAAAA;AATK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGE,QAbH,CADF;AAiBD,CApCD;;AAsCA,eAAeD,YAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nimport {\n  addItemToCart,\n  removeItemFromCart,\n  filterItemFromCart,\n  getCartItemsCount,\n  getCartTotal\n} from './cart.utils';\n\nconst storedState = JSON.parse(sessionStorage.getItem('cartItems'));\n\nexport const CartContext = createContext({\n  hidden: true,\n  toggleHidden: () => { },\n  cartItems: [],\n  addItem: () => { },\n  removeItem: () => { },\n  clearItemFromCart: () => { },\n  clearCart: () => { },\n  cartItemsCount: 0,\n  cartTotal: 0\n});\n\nconst CartProvider = ({ children }) => {\n  const [hidden, setHidden] = useState(true);\n  const [cartItems, setCartItems] = useState(storedState ? storedState : []);\n  const [cartItemsCount, setCartItemsCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\n  const toggleHidden = () => setHidden(!hidden);\n  const clearItemFromCart = item =>\n    setCartItems(filterItemFromCart(cartItems, item));\n  const clearCart = () => setCartItems([])\n\n  useEffect(() => {\n    setCartItemsCount(getCartItemsCount(cartItems));\n    sessionStorage.setItem('cartItems', JSON.stringify(cartItems));\n    setCartTotal(getCartTotal(cartItems));\n  }, [cartItems]);\n\n  return (\n    <CartContext.Provider\n      value={{\n        hidden,\n        toggleHidden,\n        cartItems,\n        addItem,\n        removeItem,\n        clearItemFromCart,\n        clearCart,\n        cartItemsCount,\n        cartTotal\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}